// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensor.proto

package com.sd.sensors;

/**
 * Protobuf type {@code com.sd.sensors.Message}
 */
public  final class Message extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.sd.sensors.Message)
    MessageOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Message.newBuilder() to construct.
  private Message(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Message() {
    sensors_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Message();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Message(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              sensors_ = new java.util.ArrayList<com.sd.sensors.Sensor>();
              mutable_bitField0_ |= 0x00000001;
            }
            sensors_.add(
                input.readMessage(com.sd.sensors.Sensor.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        sensors_ = java.util.Collections.unmodifiableList(sensors_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.sd.sensors.SensorProto.internal_static_com_sd_sensors_Message_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.sd.sensors.SensorProto.internal_static_com_sd_sensors_Message_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.sd.sensors.Message.class, com.sd.sensors.Message.Builder.class);
  }

  public static final int SENSORS_FIELD_NUMBER = 1;
  private java.util.List<com.sd.sensors.Sensor> sensors_;
  /**
   * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
   */
  public java.util.List<com.sd.sensors.Sensor> getSensorsList() {
    return sensors_;
  }
  /**
   * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
   */
  public java.util.List<? extends com.sd.sensors.SensorOrBuilder> 
      getSensorsOrBuilderList() {
    return sensors_;
  }
  /**
   * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
   */
  public int getSensorsCount() {
    return sensors_.size();
  }
  /**
   * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
   */
  public com.sd.sensors.Sensor getSensors(int index) {
    return sensors_.get(index);
  }
  /**
   * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
   */
  public com.sd.sensors.SensorOrBuilder getSensorsOrBuilder(
      int index) {
    return sensors_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < sensors_.size(); i++) {
      output.writeMessage(1, sensors_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < sensors_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, sensors_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.sd.sensors.Message)) {
      return super.equals(obj);
    }
    com.sd.sensors.Message other = (com.sd.sensors.Message) obj;

    if (!getSensorsList()
        .equals(other.getSensorsList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getSensorsCount() > 0) {
      hash = (37 * hash) + SENSORS_FIELD_NUMBER;
      hash = (53 * hash) + getSensorsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.sd.sensors.Message parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.sd.sensors.Message parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.sd.sensors.Message parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.sd.sensors.Message parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.sd.sensors.Message parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.sd.sensors.Message parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.sd.sensors.Message parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.sd.sensors.Message parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.sd.sensors.Message parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.sd.sensors.Message parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.sd.sensors.Message parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.sd.sensors.Message parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.sd.sensors.Message prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.sd.sensors.Message}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.sd.sensors.Message)
      com.sd.sensors.MessageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sd.sensors.SensorProto.internal_static_com_sd_sensors_Message_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sd.sensors.SensorProto.internal_static_com_sd_sensors_Message_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sd.sensors.Message.class, com.sd.sensors.Message.Builder.class);
    }

    // Construct using com.sd.sensors.Message.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getSensorsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (sensorsBuilder_ == null) {
        sensors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        sensorsBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.sd.sensors.SensorProto.internal_static_com_sd_sensors_Message_descriptor;
    }

    @java.lang.Override
    public com.sd.sensors.Message getDefaultInstanceForType() {
      return com.sd.sensors.Message.getDefaultInstance();
    }

    @java.lang.Override
    public com.sd.sensors.Message build() {
      com.sd.sensors.Message result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.sd.sensors.Message buildPartial() {
      com.sd.sensors.Message result = new com.sd.sensors.Message(this);
      int from_bitField0_ = bitField0_;
      if (sensorsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          sensors_ = java.util.Collections.unmodifiableList(sensors_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.sensors_ = sensors_;
      } else {
        result.sensors_ = sensorsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.sd.sensors.Message) {
        return mergeFrom((com.sd.sensors.Message)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.sd.sensors.Message other) {
      if (other == com.sd.sensors.Message.getDefaultInstance()) return this;
      if (sensorsBuilder_ == null) {
        if (!other.sensors_.isEmpty()) {
          if (sensors_.isEmpty()) {
            sensors_ = other.sensors_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSensorsIsMutable();
            sensors_.addAll(other.sensors_);
          }
          onChanged();
        }
      } else {
        if (!other.sensors_.isEmpty()) {
          if (sensorsBuilder_.isEmpty()) {
            sensorsBuilder_.dispose();
            sensorsBuilder_ = null;
            sensors_ = other.sensors_;
            bitField0_ = (bitField0_ & ~0x00000001);
            sensorsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSensorsFieldBuilder() : null;
          } else {
            sensorsBuilder_.addAllMessages(other.sensors_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.sd.sensors.Message parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.sd.sensors.Message) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.sd.sensors.Sensor> sensors_ =
      java.util.Collections.emptyList();
    private void ensureSensorsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        sensors_ = new java.util.ArrayList<com.sd.sensors.Sensor>(sensors_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.sd.sensors.Sensor, com.sd.sensors.Sensor.Builder, com.sd.sensors.SensorOrBuilder> sensorsBuilder_;

    /**
     * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
     */
    public java.util.List<com.sd.sensors.Sensor> getSensorsList() {
      if (sensorsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(sensors_);
      } else {
        return sensorsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
     */
    public int getSensorsCount() {
      if (sensorsBuilder_ == null) {
        return sensors_.size();
      } else {
        return sensorsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
     */
    public com.sd.sensors.Sensor getSensors(int index) {
      if (sensorsBuilder_ == null) {
        return sensors_.get(index);
      } else {
        return sensorsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
     */
    public Builder setSensors(
        int index, com.sd.sensors.Sensor value) {
      if (sensorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSensorsIsMutable();
        sensors_.set(index, value);
        onChanged();
      } else {
        sensorsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
     */
    public Builder setSensors(
        int index, com.sd.sensors.Sensor.Builder builderForValue) {
      if (sensorsBuilder_ == null) {
        ensureSensorsIsMutable();
        sensors_.set(index, builderForValue.build());
        onChanged();
      } else {
        sensorsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
     */
    public Builder addSensors(com.sd.sensors.Sensor value) {
      if (sensorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSensorsIsMutable();
        sensors_.add(value);
        onChanged();
      } else {
        sensorsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
     */
    public Builder addSensors(
        int index, com.sd.sensors.Sensor value) {
      if (sensorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSensorsIsMutable();
        sensors_.add(index, value);
        onChanged();
      } else {
        sensorsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
     */
    public Builder addSensors(
        com.sd.sensors.Sensor.Builder builderForValue) {
      if (sensorsBuilder_ == null) {
        ensureSensorsIsMutable();
        sensors_.add(builderForValue.build());
        onChanged();
      } else {
        sensorsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
     */
    public Builder addSensors(
        int index, com.sd.sensors.Sensor.Builder builderForValue) {
      if (sensorsBuilder_ == null) {
        ensureSensorsIsMutable();
        sensors_.add(index, builderForValue.build());
        onChanged();
      } else {
        sensorsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
     */
    public Builder addAllSensors(
        java.lang.Iterable<? extends com.sd.sensors.Sensor> values) {
      if (sensorsBuilder_ == null) {
        ensureSensorsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sensors_);
        onChanged();
      } else {
        sensorsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
     */
    public Builder clearSensors() {
      if (sensorsBuilder_ == null) {
        sensors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        sensorsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
     */
    public Builder removeSensors(int index) {
      if (sensorsBuilder_ == null) {
        ensureSensorsIsMutable();
        sensors_.remove(index);
        onChanged();
      } else {
        sensorsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
     */
    public com.sd.sensors.Sensor.Builder getSensorsBuilder(
        int index) {
      return getSensorsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
     */
    public com.sd.sensors.SensorOrBuilder getSensorsOrBuilder(
        int index) {
      if (sensorsBuilder_ == null) {
        return sensors_.get(index);  } else {
        return sensorsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
     */
    public java.util.List<? extends com.sd.sensors.SensorOrBuilder> 
         getSensorsOrBuilderList() {
      if (sensorsBuilder_ != null) {
        return sensorsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(sensors_);
      }
    }
    /**
     * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
     */
    public com.sd.sensors.Sensor.Builder addSensorsBuilder() {
      return getSensorsFieldBuilder().addBuilder(
          com.sd.sensors.Sensor.getDefaultInstance());
    }
    /**
     * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
     */
    public com.sd.sensors.Sensor.Builder addSensorsBuilder(
        int index) {
      return getSensorsFieldBuilder().addBuilder(
          index, com.sd.sensors.Sensor.getDefaultInstance());
    }
    /**
     * <code>repeated .com.sd.sensors.Sensor sensors = 1;</code>
     */
    public java.util.List<com.sd.sensors.Sensor.Builder> 
         getSensorsBuilderList() {
      return getSensorsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.sd.sensors.Sensor, com.sd.sensors.Sensor.Builder, com.sd.sensors.SensorOrBuilder> 
        getSensorsFieldBuilder() {
      if (sensorsBuilder_ == null) {
        sensorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.sd.sensors.Sensor, com.sd.sensors.Sensor.Builder, com.sd.sensors.SensorOrBuilder>(
                sensors_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        sensors_ = null;
      }
      return sensorsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.sd.sensors.Message)
  }

  // @@protoc_insertion_point(class_scope:com.sd.sensors.Message)
  private static final com.sd.sensors.Message DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.sd.sensors.Message();
  }

  public static com.sd.sensors.Message getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Message>
      PARSER = new com.google.protobuf.AbstractParser<Message>() {
    @java.lang.Override
    public Message parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Message(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Message> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Message> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.sd.sensors.Message getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

